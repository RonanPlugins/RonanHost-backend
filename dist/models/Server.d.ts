import { UUID } from "../types/UUID";
export default class Server {
    get id(): number;
    set id(value: number);
    get external_id(): string | null;
    set external_id(value: string | null);
    get uuid(): UUID;
    set uuid(value: UUID);
    get name(): string;
    set name(value: string);
    get description(): string | null;
    set description(value: string | null);
    get suspended(): boolean;
    set suspended(value: boolean);
    get node_id(): number;
    set node_id(value: number);
    get allocation_id(): number;
    set allocation_id(value: number);
    get nest_id(): number;
    set nest_id(value: number);
    get egg_id(): number;
    set egg_id(value: number);
    get pack_id(): number | null;
    set pack_id(value: number | null);
    get container(): {
        start_command: string;
        image: string;
        installed: boolean;
        environment: Record<string, string>;
    };
    set container(value: {
        start_command: string;
        image: string;
        installed: boolean;
        environment: Record<string, string>;
    });
    get updated_at(): string;
    set updated_at(value: string);
    get created_at(): string;
    set created_at(value: string);
    private _id;
    private _external_id;
    private _uuid;
    private _name;
    private _description;
    private _suspended;
    private _node_id;
    private _allocation_id;
    private _nest_id;
    private _egg_id;
    private _pack_id;
    private _container;
    private _updated_at;
    private _created_at;
    constructor(id: number, external_id: string | null, uuid: UUID, name: string, description: string | null, suspended: boolean, node_id: number, allocation_id: number, nest_id: number, egg_id: number, pack_id: number | null, container: {
        start_command: string;
        image: string;
        installed: boolean;
        environment: Record<string, string>;
    }, updated_at: string, created_at: string);
}
